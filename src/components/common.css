.leaf-input-container {
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 10rem;

  --placeholder-color: var(--leaf-grey-80);

  &.filled {
    .leaf-label-area {
      color: var(--leaf-grey-10);
    }
    .leaf-input {
      border-color: var(--leaf-grey-10);
    }
  }

  &.focused {
    .leaf-label-area {
      color: var(--leaf-grey-10);
    }
    .leaf-input {
      border-color: var(--leaf-primary-60);
    }
  }

  &.error {
    .leaf-label-area {
      color: var(--leaf-status-red);
    }
    .leaf-input {
      border-color: var(--leaf-status-red);
    }
  }
  &.disabled {
    .leaf-input {
      background-color: var(--leaf-grey-95);
    }
  }
  &:not(.disabled):not(.filled):not(.focused):not(.error):hover {
    .leaf-input:not(:focus) {
      border-color: var(--leaf-grey-70);
    }
  }

  & p {
    margin: 0;
  }
}

.leaf-label-area {
  position: relative;
  height: 1.25rem;
  text-align: left;
  color: var(--leaf-grey-70);
  transition: color 0.2s;
  line-height: 0;

  & label {
    padding-left: 0.25rem;
  }
}

.leaf-input-area {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;

  &:hover .leaf-clear-button {
    display: block;
  }
}

.leaf-input {
  width: 100%;
  height: 2.25rem;
  padding: 0 0.5em;
  border: 1px solid var(--leaf-grey-80);
  border-radius: 4px;
  outline: none;
  background: white;
  transition: border-color 0.2s;
  &::placeholder {
    color: var(--placeholder-color);
  }
  &:focus {
    border-color: var(--leaf-primary-60);
  }

  &.clearable {
    padding-right: 1.5rem;
  }
}

.leaf-clear-button.leaf-clear-button {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translate(-0.25rem, -50%);
  display: none;
  width: 1rem;
  height: 1rem;
  padding: 0;
  border: none;
  background: var(--leaf-primary-95);
  border-radius: 50%;
  color: var(--leaf-grey-70);
  line-height: 0;
  cursor: pointer;

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 1px;
    padding: 0;
    border-radius: unset;
    background-color: currentColor;
    color: inherit;
    transform: translate(-50%, -50%) rotate(-45deg);
  }
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 1px;
    padding: 0;
    border-radius: unset;
    background-color: currentColor;
    color: inherit;
    transform: translate(-50%, -50%) rotate(45deg);
  }

  &:hover {
    color: var(--leaf-grey-10);
  }
}

.leaf-extra-area {
  min-height: 1.125rem;
}

.leaf-error-message {
  padding-left: 0.25rem;
  color: var(--leaf-status-red);
}

/* PasswordInput */
.leaf-password-input .leaf-input {
  padding-right: 3rem;
}
.leaf-password-input .leaf-clear-button {
  right: 1.25rem;
}
.leaf-password-eye {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translate(-0.25rem, -50%);
  width: 1rem;
  height: 1rem;
  padding: 0;
  border: none;
  background: none;
  line-height: 0;
  cursor: pointer;
}
